package com.lion.finalprojectshoppingmallservice3team.Component

import android.util.Log
import android.widget.ImageView
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.ui.viewinterop.AndroidView
import com.bumptech.glide.Glide
import com.google.firebase.storage.FirebaseStorage
import com.lion.finalprojectshoppingmallservice3team.ui.theme.SubColor
import kotlinx.coroutines.tasks.await

@Composable
fun LikeLionInquiryCard(item: Map<String, *>) {
    val isAnswer = (item["isAnswer"] as? Boolean) ?: false
    val backgroundColor = if (isAnswer) SubColor else Color(0xFFE0E0E0) // ÎãµÎ≥Ä Ïó¨Î∂ÄÏóê Îî∞Î•∏ Î∞∞Í≤ΩÏÉâ

    val fileName = item["attachment"] as? String

    var imageUrl by remember { mutableStateOf<String?>(null) }

    // üî• Firebase StorageÏóêÏÑú Îã§Ïö¥Î°úÎìú URL Í∞ÄÏ†∏Ïò§Í∏∞
    LaunchedEffect(fileName) {
        if (!fileName.isNullOrEmpty()) {
            val storageRef = FirebaseStorage.getInstance().reference.child("image/$fileName")
            try {
                imageUrl = storageRef.downloadUrl.await().toString() // ‚úÖ URL ÎπÑÎèôÍ∏∞ Í∞ÄÏ†∏Ïò§Í∏∞
            } catch (e: Exception) {
                Log.e("FirebaseStorage", "Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïã§Ìå®: ${e.message}")
            }
        }
    }

    Column(
        modifier = Modifier
            .fillMaxWidth()
            .padding(8.dp)
            .background(
                color = backgroundColor,
                shape = RoundedCornerShape(8.dp)
            )
            .padding(16.dp)
    ) {
        // ÏûëÏÑ±Ïûê Î∞è ÎÇ†Ïßú
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            Text(
                text = (item["author"] as? String) ?: "",
                fontSize = 14.sp,
                color = if (isAnswer) Color(0xFF673AB7) else Color.Black // ÎãµÎ≥ÄÏù¥Î©¥ Î≥¥ÎùºÏÉâ
            )
            Text(
                text = (item["date"] as? String) ?: "",
                fontSize = 14.sp,
                color = Color.Gray
            )
        }

        Spacer(modifier = Modifier.height(8.dp))

        // Ï†úÎ™© (Î¨∏ÏùòÏùº ÎïåÎßå ÌëúÏãú)
        if (!isAnswer) {
            Text(
                text = "Ï†úÎ™©: ${(item["title"] ?: "Ï†úÎ™© ÏóÜÏùå") as String}",
                fontSize = 14.sp,
                fontWeight = FontWeight.Bold,
                color = Color.Black
            )
            Spacer(modifier = Modifier.height(4.dp))
        }

        // ÎÇ¥Ïö©
        Text(
            text = if (isAnswer) "ÎãµÎ≥Ä ÎÇ¥Ïö©: ${(item["content"] ?: "")}" else "ÎÇ¥Ïö©: ${(item["content"] ?: "")}",
            fontSize = 14.sp,
            color = Color.Black
        )

        Spacer(modifier = Modifier.height(4.dp))

        // ‚úÖ GlideÎ•º Ïù¥Ïö©Ìïú Ïù¥ÎØ∏ÏßÄ ÌëúÏãú
        if (!imageUrl.isNullOrEmpty()) {
            AndroidView(
                factory = { context ->
                    ImageView(context).apply {
                        scaleType = ImageView.ScaleType.CENTER_CROP
                    }
                },
                update = { imageView ->
                    Glide.with(imageView.context)
                        .load(imageUrl)
                        .into(imageView)
                },
                modifier = Modifier
                    .fillMaxWidth()
                    .height(200.dp)
            )
        } else {
            // Ï≤®Î∂Ä ÌååÏùº
            Text(
                text = "Ï≤®Î∂ÄÌååÏùº: - ",
                fontSize = 14.sp,
                color = Color.Gray
            )
        }
    }
}